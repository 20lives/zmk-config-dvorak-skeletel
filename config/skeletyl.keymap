#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Modified keymap based on personal experience, with some improvements based on Miryoku layout.

#define DVORAK  0
#define QWERTY  1
#define RAISE   2
#define LOWER   2

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Combo for toggling the Qwerty layout
        combo_tg_qwerty {
            timeout-ms = <50>;
            key-positions = <6 7 8>;
            bindings = <&tog QWERTY>;
        };

        // Combo for toggling output
        combo_tg_output {
            timeout-ms = <50>;
            key-positions = <0 5>;
            bindings = <&out OUT_TOG>;
        };

        // Combo for reseting bluetooth
        combo_tg_output {
            timeout-ms = <50>;
            key-positions = <11 15>;
            bindings = <&bt BT_CLR>;
        };

        // Combo for bootloader reset
        combo_tg_output {
            timeout-ms = <50>;
            key-positions = <21 25>;
            bindings = <&bootloader>;
        };

        // Combo for bluetooth control (i.e. switch among the devices).
        combo_bt_next {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&bt BT_NXT>;
        };
        combo_bt_prev {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&bt BT_PRV>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

 /* Base (dvorak)
 * ,---------------------------------------,                                  ,---------------------------------------,
 * |   '   |   ,   |   .   |   p   |   y   |                                  |   f   |   g   |   c   |   r   |   l   | 
 * |-------+-------+-------+-------+-------|                                  |-------+-------+-------+-------+-------|
 * |   a   |   o   |   e   |   u   |   i   |                                  |   d   |   h   |   t   |   n   |   s   |
 * |-------+-------+-------+-------+-------|                                  |------ +-------+-------+-------+-------|
 * |   ;   |   q   |   j   |   k   |   x   |                                  |   b   |   m   |   w   |   v   |   z   |
 * '-------------------------------------------------------,  ,-------------------------------------------------------'
 *                                 | RAISE |  ESC  |  BS   |  | SPACE | ENTER | LOWER |
 *                                 '-----------------------'  '-----------------------'
 */

        dvorak {
            bindings = <
    &kp SQT        &kp COMMA      &kp DOT        &kp P          &kp Y          &kp F          &kp G           &kp C          &kp R          &kp L
    &hm LSHFT A    &hm LALT O     &hm LGUI E     &hm LCTRL U    &kp I          &kp D          &hm LCTRL H     &hm LGUI T     &hm LALT N     &hm LSHFT S
    &kp SEMI       &kp Q          &kp J          &kp K          &kp X          &kp B          &kp M           &kp W          &kp V          &kp Z
                                  &kp ESC        &kp BSPC       &mo RAISE      &mo LOWER      &kp SPACE       &kp RET
            >;
        };

        qwerty {
            bindings = <
    &kp Q          &kp W          &kp E          &kp R          &kp T          &kp Y          &kp U           &kp I          &kp O          &kp P
    &hm LSHFT A    &hm LALT S     &hm LGUI D     &hm LCTRL F    &kp G          &kp H          &hm LCTRL J     &hm LGUI K     &hm LALT L     &hm LSHFT SQT
    &kp Z          &kp X          &kp C          &kp V          &kp B          &kp N          &kp M           &kp COMMA      &kp DOT        &kp FSLH 
                                  &kp ESC        &kp BSPC       &mo RAISE      &mo LOWER      &kp SPACE       &kp RET
            >;
        };

 /* Raise
 * ,---------------------------------------,                                  ,---------------------------------------,
 * |   F1  |  F2   |  F3   |  F4   |  F5   |                                  |  PGUP |  HOME |  up   |  END  |  DEL  | 
 * |-------+-------+-------+-------+-------|                                  |-------+-------+-------+-------+-------|
 * |   F6  |  F7   |  F8   |  F9   |  F10  |                                  |  PGDN |  left |  down | right |  TAB  |
 * |-------+-------+-------+-------+-------|                                  |------ +-------+-------+-------+-------|
 * |  F11  |  F12  |       |       |       |                                  |   {   |   [   |   ?   |   ]   |   }   |
 * '-------------------------------------------------------,  ,-------------------------------------------------------'
 *                                 |       |       |       |  |       |       |       |
 *                                 '-----------------------'  '-----------------------'
 */

        raise_layer {
            bindings = <
    &kp F1         &kp F2         &kp F3         &kp F4         &kp F5         &kp PG_UP      &kp HOME       &kp UP          &kp END        &kp DEL
    &kp F6         &kp F7         &kp F8         &kp F9         &kp F10        &kp PG_DN      &kp LEFT       &kp DOWN        &kp RIGHT      &kp TAB
    &kp F11        &kp F12        &trans         &trans         &trans         &kp LBRC       &kp LBKT       &kp QMARK       &kp RBKT       &kp RBRC
                                  &trans         &trans         &trans         &trans         &trans         &trans
            >;
        };

 /* Lower
 * ,---------------------------------------,                                   ,---------------------------------------,
 * |   =   |   +   |   -   |   _   |   |   |                                   |   /   |   \   |   `   |   ~   |       | 
 * |-------+-------+-------+-------+-------|                                   |-------+-------+-------+-------+-------|
 * |   1   |   2   |   3   |   4   |   5   |                                   |   6   |   7   |   8   |   9   |   0   |
 * |-------+-------+-------+-------+-------|                                   |------ +-------+-------+-------+-------|
 * |   !   |   @   |   #   |   $   |   %   |                                   |   ^   |   &   |   *   |   (   |   )   |
 * '-------------------------------------------------------,  ,--------------------------------------------------------'
 *                                 |       |       |       |  |       |       |       |
 *                                 '-----------------------'  '-----------------------'
 */

        lower_layer {
            bindings = <
    &kp EQUAL      &kp PLUS       &kp MINUS      &kp UNDER      &kp PIPE       &kp FSLH       &kp BSLH       &kp GRAVE       &kp TILDE      &trans
    &kp N1         &kp N2         &kp N3         &kp N4         &kp N5         &kp N6         &kp N7         &kp N8          &kp N9         &kp N0
    &kp EXCL       &kp AT         &kp HASH       &kp DLLR       &kp PRCNT      &kp CARET      &kp AMPS       &kp ASTRK       &kp LPAR       &kp RPAR
                                  &trans         &trans         &trans         &trans         &trans         &trans
            >;
        };

    };
};
